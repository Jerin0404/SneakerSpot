<%- include("../../views/partials/user/header") %>
<style>
    /* Enhanced Checkout Styles */
    .checkout-section {
        background: #f8f9fa;
        padding: 2rem 0;
    }

    .product-table {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.05);
    }

    .product-table thead {
        background: #4a90e2;
        color: white;
    }

    .product-table img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 8px;
    }

    .address-card {
        border: 2px solid #e9ecef;
        border-radius: 12px;
        transition: all 0.3s ease;
        margin-bottom: 1.5rem;
    }

    .address-card.selected {
        border-color: #4a90e2;
        background: #f8fbff;
    }

    .coupon-card {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 10px;
        padding: 1.25rem;
        margin-bottom: 1rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        transition: transform 0.2s ease;
    }

    .coupon-card:hover {
        transform: translateY(-3px);
    }

    .payment-method-card {
        border: 2px solid #e9ecef;
        border-radius: 10px;
        padding: 1rem;
        margin-bottom: 1rem;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .payment-method-card.selected {
        border-color: #4a90e2;
        background: #f8fbff;
    }

    .order-summary-card {
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.05);
        padding: 2rem;
    }

    .total-price {
        font-size: 1.5rem;
        color: #2d3436;
        font-weight: 700;
    }

    .btn-checkout {
        background: #4a90e2;
        color: white;
        padding: 1rem 2rem;
        border-radius: 50px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .btn-checkout:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(74,144,226,0.3);
    }
</style>

<section class="checkout-section">
    <div class="container">
        <div class="row g-4">
            <!-- Product List -->
            <div class="col-lg-8">
                <div class="product-table p-4">
                    <h4 class="mb-4"><i class="fas fa-shopping-cart me-2"></i>Your Cart</h4>
                    <div class="table-responsive">
                        <table class="table align-middle">
                            <thead class="rounded">
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Price</th>
                                    <th>Total</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (product && product.length > 0) { %>
                                    <% product.forEach(item => { %>
                                        <tr>
                                            <!-- Product Image and Name -->
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <% if (item.productDetails?.[0]?.productImage?.[0]) { %>
                                                        <img src="/uploads/re-image/<%= item.productDetails[0].productImage[0] %>" 
                                                             class="me-3" alt="Product Image">
                                                    <% } %>
                                                    <div>
                                                        <h6 class="mb-0"><%= item.productDetails?.[0]?.productName %></h6>
                                                        <small class="text-muted"><%= item.productDetails?.[0] %></small>
                                                    </div>
                                                </div>
                                            </td>
                    
                                            <!-- Quantity -->
                                            <td>
                                                <%= item.quantity %>
                                            </td>
                    
                                            <!-- Price -->
                                            <td>
                                                ₹<%= item.productDetails?.[0]?.salePrice %>
                                            </td>
                    
                                            <!-- Total -->
                                            <td>
                                                ₹<%= (item.productDetails?.[0]?.salePrice * item.quantity).toFixed(2) %>
                                            </td>
                    
                                            <!-- Remove Button -->
                                            <td>
                                                <a href="/deleteItem?id=<%= item._id %>" 
                                                   class="btn btn-danger btn-sm"
                                                   onclick="return confirm('Are you sure you want to remove this item?')">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="5" class="text-center py-4">
                                            <div class="text-muted">Your cart is empty</div>
                                        </td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Checkout Summary -->
            <div class="col-lg-4">
                <!-- Address Selection -->
                <div class="mb-4">
                    <h5 class="mb-3"><i class="fas fa-map-marker-alt me-2"></i>Select Address</h5>
                    <% if (locals.userAddress?.address?.length > 0) { %>
                    <div class="accordion" id="addressAccordion">
                        <% userAddress.address.forEach((address, index) => { %>
                        <div class="address-card <%= address.isDefault ? 'selected' : '' %>">
                            <div class="p-3">
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" 
                                           name="selectedAddress" 
                                           id="address<%= index %>"
                                           value="<%= address._id %>" 
                                           <%= address.isDefault ? 'checked' : '' %>>
                                    <label class="form-check-label" for="address<%= index %>">
                                        <strong><%= address.addressType %></strong>
                                    </label>
                                </div>
                                <div class="mt-2">
                                    <p class="mb-1"><%= address.name %></p>
                                    <p class="mb-1 text-muted"><%= address.city %>, <%= address.state %></p>
                                    <p class="mb-1 text-muted"><%= address.phone %></p>
                                    <div class="d-flex gap-2 mt-2">
                                        <a href="/editAddress?id=<%= address._id %>" 
                                           class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a href="/deleteAddress?id=<%= address._id %>" 
                                           class="btn btn-sm btn-outline-danger"
                                           onclick="return confirm('Delete this address?')">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <% }); %>
                    </div>
                    <% } else { %>
                    <div class="alert alert-warning">No addresses found</div>
                    <% } %>
                    <button class="btn btn-outline-primary w-100 mt-3"
                            onclick="window.location.href='/addAddress'">
                        <i class="fas fa-plus me-2"></i>Add New Address
                    </button>
                </div>

                <!-- Payment & Summary -->
                <div class="order-summary-card">
                    <h5 class="mb-4"><i class="fas fa-wallet me-2"></i>Payment Summary</h5>
                    
                    <!-- Coupon Section -->
                    <div class="mb-4">
                        <div class="input-group">
                            <input type="text" class="form-control" 
                                   placeholder="Enter coupon code"
                                   id="inputCoupon">
                            <button class="btn btn-outline-secondary" 
                                    type="button"
                                    onclick="applyCoupon('<%= grandTotal %>')">
                                Apply
                            </button>
                        </div>
                    </div>

                    <!-- Order Summary -->
                    <div class="mb-4">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal:</span>
                            <span>₹<%= grandTotal + (locals.offerPrice || 0) %></span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Discount:</span>
                            <span class="text-success">-₹<%= locals.offerPrice || 0 %></span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Total:</strong>
                            <strong class="total-price">₹<%= grandTotal %></strong>
                        </div>
                    </div>

                    <!-- Payment Methods -->
                    <div class="mb-4">
                        <h6 class="mb-3"><i class="fas fa-credit-card me-2"></i>Payment Method</h6>
                        <div class="payment-method-card">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" 
                                       name="payment_option" id="cod" value="cod">
                                <label class="form-check-label" for="cod">
                                    <i class="fas fa-money-bill-wave me-2"></i>Cash on Delivery
                                </label>
                            </div>
                        </div>
                        <div class="payment-method-card">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" 
                                       name="payment_option" id="razorpay" value="razorpay">
                                <label class="form-check-label" for="razorpay">
                                    <i class="fas fa-credit-card me-2"></i>Razorpay
                                </label>
                            </div>
                        </div>
                        <div class="payment-method-card">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" 
                                       name="payment_option" id="wallet" value="wallet">
                                <label class="form-check-label" for="wallet">
                                    <i class="fas fa-wallet me-2"></i>Wallet
                                </label>
                            </div>
                        </div>
                    </div>

                    <!-- Checkout Button -->
                    <button class="btn btn-checkout w-100"
                            onclick="validateOrder('<%= user?._id %>')">
                        Complete Order
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>
<%- include("../../views/partials/user/footer") %>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
        async function placeOrder(userId, productId) {
            let address = $("input[name='selectedAddress']:checked").val();
            let payment = $("input[name='payment_option']:checked").val();

            const sum = document.getElementById("totalValue").textContent;
            const numericValue = parseInt(sum.replace(/[^\d.]/g, ''));
            console.log(numericValue);
            

            if (!payment) {
                Swal.fire({
                    title: 'NO PAYMENT FOUND!',
                    text: 'Please select your Payment.',
                    icon: 'error',
                    timer: 3000,
                });
            } else if (!address) {
                Swal.fire({
                    title: 'NO ADDRESS FOUND!',
                    text: 'Please select your address.',
                    icon: 'error',
                    timer: 3000,
                });
            } else if(payment === "cod" && numericValue > 1000){
                Swal.fire({
            title: 'COD Not Allowed!',
            text: 'Orders above ₹1000 are not allowed for Cash on Delivery (COD).',
            icon: 'error',
            timer: 3000,
        });
            }else {
                $.ajax({
                    url: '/orderPlaced',
                    method: 'POST',
                    data:{
                        totalPrice: numericValue,
                        createdOn: new Date().getTime(),
                        date: new Date(),
                        addressId: address,
                        payment: payment,
                        discount : discount
                    },
                    success: function (response) {
                        let orderId = response.order._id
                        if (response.method === "cod") {
                        Swal.fire({
                            title: "Order success",
                            text: "order placed successfully",
                            icon: "success",
                            showCancelButton: true,
                            confirmButtonText: "view orders",
                            cancelButtonText: "continue shopping",
                            reverseButtons: true
                        }).then(function (result) {
                            if (result.value) {
                                let orderId = response.order._id
                                location.href =`/orderDetails?id=${orderId}`;
                            } else if (result.dismiss === "cancel") {
                                location.href = '/'
                            }
                        });
                    
                        }else if (response.method === "wallet") {
                            if(response.payment===true){
                        Swal.fire({
                            title: "Order success",
                            text: "order placed successfully",
                            icon: "success",
                            showCancelButton: true,
                            confirmButtonText: "view orders",
                            cancelButtonText: "continue shopping",
                            reverseButtons: true
                        }).then(function (result) {
                            if (result.value) {
                                let orderId = response.order._id
                                location.href = `/orderDetails?id=${orderId}`;
                            } else if (result.dismiss === "cancel") {
                                location.href = '/'
                            }
                        });
                    }else {
    Swal.fire({
        title: "Order failed",
        text: "Wallet amount is not enough",
        icon: "error",
        showConfirmButton: true,
    }).then(function(result) {
        if (result.value) {
            location.href = '/';
        }
    });
}

                        }                 
                            else if (response.method === "razorpay") {
                           let orderAmount=Math.round(numericValue*100);
                            var options = {
                                "key": "rzp_test_vWkG4lrwiDnQ0g",
                                "amount": orderAmount,
                                "currency": "INR",
                                "name": "Trend Setter",
                                "description": "Test Transaction",
                                "image": "https://firebasestorage.googleapis.com/v0/b/ecommerce-397a7.appspot.com/o/logo.jpg?alt=media&token=07b6be19-1ce8-4797-a3a0-f0eaeaafedad",
                                "order_id": response.razorPayOrder.id,
                                "handler": function (status) {
                                    verifyPayment(response.razorPayOrder, status,response.order._id);
                                },
                                "prefill": {
                                    "name": "Customer Name",
                                    "email": "customer@example.com",
                                    "contact": "9961618585"
                                },

                                "theme": {
                                    "color": "#3399cc"
                                }
                            }
                            var rzp1 = new Razorpay(options);
                            rzp1.open();

                        } else {
                            Swal.fire({
                                title: 'Error Occured',
                                text: "Can't process order error occured",
                                icon: 'fail',
                                timer: 5000
                            })
                        }
                    },
                });
            }
        }

        function verifyPayment(order, payment,orderId) {
            $.ajax({
                url: '/verifyPayment',
                method: 'post',
                data: {
                    order,
                    payment
                }, success: (response) => {
                    if (response.status) {
                        $.ajax({
                            url:'/paymentConfirm',
                            method:'post',
                            data :{
                                status:"Pending",
                                orderId
                            },
                            success:(response)=>{
                            }
                        })
                        Swal.fire({
                            title: "Order success",
                            text: "order placed successfully",
                            icon: "success",
                            showCancelButton: true,
                            confirmButtonText: "view orders",
                            cancelButtonText: "continue shopping",
                            reverseButtons: true
                        }).then(function (result) {
                            if (result.value) {
                                console.log("I am success");
                                var orderDetailsUrl = `/orderDetails?id=${orderId}`;
            location.href = orderDetailsUrl;
                            } else if (result.dismiss === "cancel") {
                                console.log("Nopppp");
                                location.href = '/'
                            }
                        });
                    }

                }
            })
        }
        
        function showCouponDetails(couponName) {
            Swal.fire({
                title: 'Coupon Details',
                text: `${couponName}`,
                icon: 'info',
                confirmButtonText: 'OK'
            }).then((result) => {
                if (result.isConfirmed) {
                    copyToClipboard(couponName);
                }
            });
        }

        function copyToClipboard(text) {
            var tempInput = document.createElement('input');
            document.body.appendChild(tempInput);
            tempInput.value = text;

            tempInput.select();
            document.execCommand('copy');

            document.body.removeChild(tempInput);

            Swal.fire({
                title: 'Copied!',
                text: 'Coupon name has been copied to the clipboard.',
                icon: 'success',
                confirmButtonText: 'OK'
            });
        }

        let discount = 0;



 const applyCoupon = async (totalAmount) => {
  const couponName = document.getElementById("inputCoupon").value.trim();
  if (!couponName) {
    Swal.fire({ icon: 'error', title: 'Error', text: 'Please enter a coupon code.' });
    return;
  }

  try {
    const response = await fetch('/applyCoupon', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ coupon: couponName, total: totalAmount }),
    });

    const data = await response.json();
    if (data.success) {
      Swal.fire({ icon: 'success', title: 'Success', text: `Coupon Discount ${data.offerPrice} Applied` });
      document.getElementById("totalValue").innerText = `₹${data.gt}`;
      document.getElementById("discount").innerText = data.offerPrice;
      document.getElementById("inputCoupon").value = "";
      discount = data.offerPrice;
    } else {
      Swal.fire({ icon: 'error', title: 'Error', text: data.message });
    }
  } catch (error) {
    console.error('Error applying coupon:', error);
    Swal.fire({ icon: 'error', title: 'Error', text: 'Failed to apply coupon.' });
  }
};


 
    
        var usedCoupon = null;
    const useCoupon = async (couponName) =>{
        disableOtherCoupons(couponName);
        copyToClipboard(couponName);
        document.getElementById("inputCoupon").value = couponName;
        document.getElementById('useButton_' + couponName).style.display = 'none';
        document.getElementById('cancelButton_' + couponName).style.display = 'block';
        usedCoupon = couponName;
    }

   const cancelCoupon = async (couponName) =>{
        enableAllCoupons();
        document.getElementById('useButton_' + couponName).style.display = 'block';
        document.getElementById('cancelButton_' + couponName).style.display = 'none';
        usedCoupon = null;
        window.location.reload();
    }
    function disableOtherCoupons(excludeCoupon) {
        var couponButtons = document.querySelectorAll('.use-button');
        couponButtons.forEach(function (button) {
            var couponName = button.id.replace('useButton_', '');
            if (couponName !== excludeCoupon) {
                button.disabled = true;
            }
        });
    }

    function enableAllCoupons() {
        var couponButtons = document.querySelectorAll('.use-button');
        couponButtons.forEach(function (button) {
            button.disabled = false;
        });
    }
    </script>


