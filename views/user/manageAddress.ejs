<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Addresses</title>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            background: #fff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.1);
            width: 500px;
            max-width: 100%;
        }

        h1 {
            color: #333;
            font-size: 24px;
            text-align: center;
        }

        .address-list {
            margin-top: 20px;
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .address-item {
            background-color: #f7f7f7;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .address-info {
            flex-grow: 1;
            font-size: 14px;
            color: #555;
        }

        .address-info p {
            margin: 5px 0;
        }

        .actions {
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 10px 15px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }

        .btn-edit {
            background-color: #ffc107;
            color: white;
            border: none;
        }

        .btn-delete {
            background-color: #dc3545;
            color: white;
            border: none;
        }

        .btn:hover {
            opacity: 0.8;
        }

        .add-address-btn {
            width: 100%;
            padding: 12px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 15px;
            transition: background-color 0.3s;
        }

        .add-address-btn:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>

<div class="container">
    <h1>Manage Your Addresses</h1>

    <div class="address-list">
        <% if (addresses) { %>
            <% addresses.forEach(address => { %>
                <div class="address-item">
                    <div class="address-info">
                        <p><strong>Address Type:</strong> <%= address.addressType %></p>
                        <p><strong>Name:</strong> <%= address.name %></p>
                        <p><strong>City:</strong> <%= address.city %></p>
                        <p><strong>Landmark:</strong> <%= address.landMark %></p>
                        <p><strong>State:</strong> <%= address.state %></p>
                        <p><strong>Pincode:</strong> <%= address.pincode %></p>
                        <p><strong>Phone:</strong> <%= address.phone %></p>
                        <p><strong>Alternative Phone:</strong> <%= address.altPhone %></p>
                    </div>
                    <div class="actions">
                        <a href="/editAddress?id=<%=address._id%>" class="btn btn-edit">Edit</a>
                        <a href="/deleteAddress?id=<%=address._id%>" class="btn btn-delete" onclick="return confirm('Are you sure you want to delete this address')">Delete</a>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <p>No addresses available. Add one below!</p>
        <% } %>
    </div>
    
    

    <button class="add-address-btn" onclick="window.location.href='/addAddress'">Add Address</button>
</div>

<script>
    function editAddress(addressId) {
        Swal.fire({
            title: 'Edit Address',
            html: `
                <label for="addressType">Address Type</label>
                <input id="addressType" type="text" placeholder="Enter address type">
                <label for="name">Name</label>
                <input id="name" type="text" placeholder="Enter your name">
                <label for="landMark">Landmark</label>
                <input id="landMark" type="text" placeholder="Enter landmark">
                <label for="state">State</label>
                <input id="state" type="text" placeholder="Enter state">
                <label for="city">City</label>
                <input id="city" type="text" placeholder="Enter city">
                <label for="pincode">Pincode</label>
                <input id="pincode" type="text" placeholder="Enter pincode">
                <label for="phonenumber">Phone Number</label>
                <input id="phonenumber" type="text" placeholder="Enter phone number">
                <label for="alternativePhoneNumber">Alternative Phone Number</label>
                <input id="alternativePhoneNumber" type="text" placeholder="Enter alternative phone number">
            `,
            showCancelButton: true,
            preConfirm: async () => {
                const addressType = document.getElementById('addressType').value;
                const name = document.getElementById('name').value;
                const landMark = document.getElementById('landMark').value;
                const state = document.getElementById('state').value;
                const city = document.getElementById('city').value;
                const pincode = document.getElementById('pincode').value;
                const phonenumber = document.getElementById('phonenumber').value;
                const alternativePhoneNumber = document.getElementById('alternativePhoneNumber').value;

                const response = await fetch(`/edit-address/${addressId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ addressType, name, landMark, state, city, pincode, phonenumber, alternativePhoneNumber })
                });

                if (response.ok) {
                    Swal.fire('Success', 'Address updated successfully!', 'success').then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire('Error', 'Failed to update address!', 'error');
                }
            }
        });
    }

    function deleteAddress(addressId) {
        Swal.fire({
            title: 'Are you sure?',
            text: 'This action cannot be undone.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then(async (result) => {
            if (result.isConfirmed) {
                const response = await fetch(`/delete-address/${addressId}`, { method: 'DELETE' });

                if (response.ok) {
                    Swal.fire('Deleted!', 'Address has been deleted.', 'success').then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire('Error', 'Failed to delete address!', 'error');
                }
            }
        });
    }
</script>

</body>
</html>
